generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  fullName    String
  email       String   @unique
  password    String
  phoneNumber String?
  role        Role     @relation(fields: [roleId], references: [id])
  roleId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  client  Client?
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model Room {
  id            Int             @id @default(autoincrement())
  number        String
  type          String
  pricePerNight Decimal         @db.Decimal(10, 2)
  status        RoomStatus
  description   String
  media         Media[]
  amenities     RoomAmenities[]
}

model Media {
  id          Int    @id @default(autoincrement())
  room        Room   @relation(fields: [roomId], references: [id])
  roomId      Int
  type        MediaType 
  url         String
  title       String
  description String
}

model Amenity {
  id            Int             @id @default(autoincrement())
  name          String
  roomAmenities RoomAmenities[]
}

model RoomAmenities {
  roomId    Int
  amenityId Int

  room    Room    @relation(fields: [roomId], references: [id])
  amenity Amenity @relation(fields: [amenityId], references: [id])

  @@id([roomId, amenityId])
}

enum RoomStatus {
  available
  occupied
  maintenance
}

enum MediaType {
  image
  video
  tour360
  ar_preview
}

model Client {
  id_client Int @id @default(autoincrement())

  utilisateur User @relation(fields: [id_utilisateur], references: [id])
  id_utilisateur Int @unique

  prenom String
  nom String
  telephone String?
  statut_membre String
  consentement_marketing Boolean @default(false)
  supprime_le DateTime? @default(now())
  reservations Reservation[]
}

model Reservation {
  id_reservation Int @id @default(autoincrement())

  client Client @relation(fields: [id_client], references: [id_client])
  id_client Int 

  date_reservation DateTime @default(now())
  etat EtatReservation
  prix_total Decimal @db.Decimal(10, 2)
  etat_paiement EtatPaiement
  source_reservation String?
  id_reservation_externe String?
  supprime_le DateTime?
}

enum EtatReservation {
  EN_ATTENTE
  CONFIRMEE
  ANNULEE
  ENREGISTREE
  DEPART
}

enum EtatPaiement {
  EN_ATTENTE
  COMPLETE
  ECHOUE
  REMBOURSE
}